[{"/usr/src/app/src/index.jsx":"1","/usr/src/app/src/store.js":"2","/usr/src/app/src/serviceWorker.js":"3","/usr/src/app/src/App.jsx":"4","/usr/src/app/src/index-reducer.js":"5","/usr/src/app/src/reducers/viewer-reducer.js":"6","/usr/src/app/src/constants/themes.js":"7","/usr/src/app/src/components/sidebar/sidebar.jsx":"8","/usr/src/app/src/theme-context.js":"9","/usr/src/app/src/components/list-menu/list-menu.jsx":"10","/usr/src/app/src/components/list-menu/list-menu-header.jsx":"11","/usr/src/app/src/components/list-menu/list-menu-item.jsx":"12"},{"size":1157,"mtime":1608809996640,"results":"13","hashOfConfig":"14"},{"size":328,"mtime":1605956652647,"results":"15","hashOfConfig":"14"},{"size":5153,"mtime":1605956652645,"results":"16","hashOfConfig":"14"},{"size":292,"mtime":1608810402660,"results":"17","hashOfConfig":"14"},{"size":138,"mtime":1605956652636,"results":"18","hashOfConfig":"14"},{"size":289,"mtime":1605956652643,"results":"19","hashOfConfig":"14"},{"size":78,"mtime":1605956652637,"results":"20","hashOfConfig":"14"},{"size":2552,"mtime":1608940397923,"results":"21","hashOfConfig":"14"},{"size":1091,"mtime":1608811111010,"results":"22","hashOfConfig":"14"},{"size":7685,"mtime":1608897079669,"results":"23","hashOfConfig":"14"},{"size":1242,"mtime":1608866377045,"results":"24","hashOfConfig":"14"},{"size":3657,"mtime":1610135172767,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":"28","usedDeprecatedRules":"29"},"bhgnir",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"29"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"29"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"29"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"29"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"29"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/usr/src/app/src/index.jsx",["57","58","59"],"import { library } from '@fortawesome/fontawesome-svg-core';\nimport * as BrandsSVGIcons from '@fortawesome/free-brands-svg-icons';\nimport * as RegularSVGIcons from '@fortawesome/free-regular-svg-icons';\nimport * as SolidSVGIcons from '@fortawesome/free-solid-svg-icons';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport store from './store';\n\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst getSVG = (svgs) => {\n  return Object.keys(svgs)\n    .filter((key) => key !== 'fas' && key !== 'prefix')\n    .map((icon) => svgs[icon]);\n};\n\nlibrary.add(\n  ...getSVG(SolidSVGIcons).concat(\n    ...getSVG(RegularSVGIcons),\n    ...getSVG(BrandsSVGIcons),\n  ),\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n",["60","61","62","63","64"],"/usr/src/app/src/store.js",[],"/usr/src/app/src/serviceWorker.js",["65","66","67","68","69","70","71","72"],"// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      const registrationCopy = registration;\n\n      registrationCopy.onupdatefound = () => {\n        const installingWorker = registrationCopy.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registrationCopy);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registrationCopy);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/usr/src/app/src/App.jsx",["73","74"],"import propTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nimport Sidebar from './components/sidebar/sidebar';\n\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Sidebar />\n    </div>\n  );\n};\n\nexport default App;\n","/usr/src/app/src/index-reducer.js",[],"/usr/src/app/src/reducers/viewer-reducer.js",[],"/usr/src/app/src/constants/themes.js",[],"/usr/src/app/src/components/sidebar/sidebar.jsx",["75","76","77"],"import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport propTypes from 'prop-types';\r\nimport React, { useContext, useReducer, useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { ThemeContext } from '../../theme-context';\r\n\r\nimport ListMenu from '../list-menu/list-menu';\r\n\r\nimport './sidebar.css';\r\n\r\nconst Sidebar = props => {\r\n  const { contents, defaultClosed, shortcuts } = props;\r\n  const { theme } = useContext(ThemeContext);\r\n  const [isCollapsed, setCollapsed] = useState(defaultClosed);\r\n\r\n  console.log(theme);\r\n\r\n  // Reducer for list-menu component\r\n  const reducer = (state, action) => {\r\n    switch (action.type) {\r\n      case 'edit-shortcuts': {\r\n        return {\r\n          ...state,\r\n          shortcuts: action.shortcuts,\r\n        };\r\n      }\r\n      case 'remove-shortcuts': {\r\n        return {\r\n          ...state,\r\n          shortcuts: [],\r\n        };\r\n      }\r\n      default:\r\n        throw new Error();\r\n    }\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(reducer, { shortcuts: [] });\r\n  const addShortcuts = nodes =>\r\n    dispatch({ type: 'edit-shortcuts', shortcuts: nodes });\r\n\r\n  return (\r\n    <div\r\n      className={`sidebar-container\r\n        ${\r\n          isCollapsed\r\n            ? 'sidebar-container-collapsed'\r\n            : 'sidebar-container-expand'\r\n        }`}\r\n      style={{ background: theme.secondary }}\r\n    >\r\n      <div className=\"sidebar-contents\">\r\n        <div className=\"sidebar-header\">\r\n          <h4 style={{ color: theme.text }}>Hello there!</h4>\r\n        </div>\r\n\r\n        <div className=\"mx-1 sidebar-body\">{contents}</div>\r\n\r\n        <div className=\"sidebar-footer\">\r\n          <small style={{ color: theme.text }}>Footer</small>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"sidebar-collapse\" style={{ background: theme.primary }}>\r\n        {isCollapsed && shortcuts}\r\n\r\n        <Button\r\n          className=\"sidebar-collapse-button\"\r\n          onClick={() => setCollapsed(!isCollapsed)}\r\n        >\r\n          <FontAwesomeIcon\r\n            className={`sidebar-collapse-button-icon ${\r\n              isCollapsed && 'sidebar-collapse-button-icon-rot'\r\n            }`}\r\n            icon=\"arrow-circle-left\"\r\n          />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSidebar.propTypes = {\r\n  contents: propTypes.instanceOf(Object),\r\n  defaultClosed: propTypes.bool,\r\n  shortcuts: propTypes.bool,\r\n};\r\n\r\nSidebar.defaultProps = {\r\n  contents: <ListMenu />,\r\n  defaultClosed: false,\r\n  shortcuts: false,\r\n};\r\n\r\nexport default Sidebar;\r\n","/usr/src/app/src/theme-context.js",["78"],"import propTypes from 'prop-types';\r\nimport React, { createContext, useEffect, useState } from 'react';\r\n\r\nconst themes = {\r\n  dark: {\r\n    primary: '#1f1f1f',\r\n    secondary: '#121212',\r\n    accent: '#ffb2b2',\r\n    text: '#ececec',\r\n  },\r\n};\r\n\r\nconst initialState = {\r\n  dark: true,\r\n  theme: themes.dark,\r\n  toggle: () => {},\r\n};\r\n\r\nconst ThemeContext = createContext(initialState);\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n  const [isDarkMode, setDarkMode] = useState(true);\r\n\r\n  /*\r\n  useEffect(() => {\r\n    const isDark = localStorage.getItem('dark') === 'true';\r\n    setDarkMode(isDark);\r\n  })\r\n  */\r\n\r\n  const toggle = () => {\r\n    const isDark = !isDarkMode;\r\n    localStorage.setItem('isDarkMode', JSON.stringify(isDark));\r\n    setDarkMode(isDark);\r\n  };\r\n\r\n  const theme = isDarkMode ? themes.dark : themes.dark;\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ theme, isDarkMode, toggle }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nThemeProvider.propTypes = {\r\n  children: propTypes.shape({}).isRequired,\r\n};\r\n\r\nexport { ThemeProvider, ThemeContext };\r\n","/usr/src/app/src/components/list-menu/list-menu.jsx",["79"],"import propTypes from 'prop-types';\r\nimport React, { useReducer } from 'react';\r\n\r\nimport ListMenuHeader from './list-menu-header';\r\nimport ListMenuItem from './list-menu-item';\r\n\r\nimport './list-menu.css';\r\n\r\nconst ListMenu = props => {\r\n  const { children: customItem, data } = props;\r\n\r\n  // Returns all nodes which have a link and shortcut flag\r\n  const getShortcuts = nodes => {\r\n    const shortcutNodes = [];\r\n\r\n    nodes.forEach(node => {\r\n      if (node.link && node.shortcut) shortcutNodes.push(node);\r\n\r\n      // eslint-disable-next-line no-unused-vars\r\n      if (node.children) shortcutNodes.push(...getShortcuts(node.children));\r\n    });\r\n\r\n    return shortcutNodes;\r\n  };\r\n\r\n  // Reducer for list-menu component\r\n  const reducer = (state, action) => {\r\n    switch (action.type) {\r\n      case 'toggle-node': {\r\n        if (state.openNodes.includes(action.key) && !action.expand) {\r\n          return {\r\n            ...state,\r\n            openNodes: [\r\n              ...state.openNodes.filter(key => !key.includes(action.key)),\r\n            ],\r\n          };\r\n        }\r\n\r\n        return {\r\n          ...state,\r\n          openNodes: Array.from(new Set(state.openNodes.concat(action.key))),\r\n        };\r\n      }\r\n      case 'collapse-all':\r\n        return { ...state, openNodes: [] };\r\n      default:\r\n        throw new Error();\r\n    }\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(reducer, { openNodes: [] });\r\n  const checkNode = key => state.openNodes.includes(key);\r\n  const toggleNode = (key, expand) =>\r\n    dispatch({ type: 'toggle-node', key, expand });\r\n  const collapseAll = () => dispatch({ type: 'collapse-all' });\r\n\r\n  return (\r\n    <div className=\"list-menu-container\">\r\n      <ul className=\"m-0 p-0 list-menu\">\r\n        {customItem\r\n          ? customItem({ checkNode, data, toggleNode })\r\n          : data.map((item, index) => {\r\n              if (item.header)\r\n                return (\r\n                  <ListMenuHeader\r\n                    item={item}\r\n                    key={`list-menu-header-${item.header}`}\r\n                    listIndex={index}\r\n                  />\r\n                );\r\n              return (\r\n                <ListMenuItem\r\n                  checkNode={checkNode}\r\n                  item={item}\r\n                  key={`list-menu-item-${item.label}`}\r\n                  listIndex={index}\r\n                  toggleNode={toggleNode}\r\n                />\r\n              );\r\n            })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nListMenu.propTypes = {\r\n  children: propTypes.instanceOf(Object),\r\n  data: propTypes.arrayOf(propTypes.shape({})),\r\n};\r\n\r\nListMenu.defaultProps = {\r\n  children: null,\r\n  data: [\r\n    { header: 'This is a label', icon: 'bars' },\r\n    {\r\n      icon: 'coffee',\r\n      label: 'Label 01',\r\n      link: '/link',\r\n      children: [\r\n        {\r\n          icon: 'robot',\r\n          label: 'I am a super long label!',\r\n          link: '/child',\r\n          children: [\r\n            {\r\n              icon: 'gift',\r\n              label: 'Grandchild 01',\r\n              link: '/grandchild',\r\n            },\r\n            {\r\n              icon: 'gift',\r\n              label: 'Super long label that will surely get clamped',\r\n              link: '/superlong',\r\n              shortcut: true,\r\n            },\r\n            {\r\n              icon: 'gift',\r\n              label: 'Super long label that will surely get clamped',\r\n              link: '/superlong',\r\n              shortcut: true,\r\n            },\r\n            {\r\n              icon: 'gift',\r\n              label: 'Super long label that will surely get clamped',\r\n              link: '/superlong',\r\n              shortcut: true,\r\n            },\r\n            {\r\n              icon: 'gift',\r\n              label: 'Super long label that will surely get clamped',\r\n              link: '/superlong',\r\n              shortcut: true,\r\n            },\r\n            {\r\n              icon: 'gift',\r\n              label: 'Super long label that will surely get clamped',\r\n              link: '/superlong',\r\n              shortcut: true,\r\n            },\r\n            {\r\n              icon: 'gift',\r\n              label: 'Super long label that will surely get clamped',\r\n              link: '/superlong',\r\n              shortcut: true,\r\n            },\r\n            {\r\n              icon: 'gift',\r\n              label: 'Super long label that will surely get clamped',\r\n              link: '/superlong',\r\n              shortcut: true,\r\n            },\r\n            {\r\n              icon: 'gift',\r\n              label: 'Super long label that will surely get clamped',\r\n              link: '/superlong',\r\n              shortcut: true,\r\n            },\r\n            {\r\n              icon: 'gift',\r\n              label: 'Super long label that will surely get clamped',\r\n              link: '/superlong',\r\n              shortcut: true,\r\n            },\r\n            {\r\n              icon: 'gift',\r\n              label: 'Super long label that will surely get clamped',\r\n              link: '/superlong',\r\n              shortcut: true,\r\n            },\r\n            {\r\n              icon: 'gift',\r\n              label: 'Super long label that will surely get clamped',\r\n              link: '/superlong',\r\n              shortcut: true,\r\n            },\r\n            {\r\n              icon: 'gift',\r\n              label: 'Super long label that will surely get clamped',\r\n              link: '/superlong',\r\n              shortcut: true,\r\n            },\r\n            {\r\n              icon: 'gift',\r\n              label: 'Super long label that will surely get clamped',\r\n              link: '/superlong',\r\n              shortcut: true,\r\n            },\r\n            {\r\n              icon: 'gift',\r\n              label: 'Super long label that will surely get clamped',\r\n              link: '/superlong',\r\n              shortcut: true,\r\n            },\r\n            {\r\n              icon: 'gift',\r\n              label: 'Super long label that will surely get clamped',\r\n              link: '/superlong',\r\n              shortcut: true,\r\n            },\r\n            {\r\n              icon: 'gift',\r\n              label: 'Super long label that will surely get clamped',\r\n              link: '/superlong',\r\n              shortcut: true,\r\n            },\r\n            {\r\n              icon: 'gift',\r\n              label: 'Super long label that will surely get clamped',\r\n              link: '/superlong',\r\n              shortcut: true,\r\n            },\r\n            {\r\n              icon: 'gift',\r\n              label: 'Super long label that will surely get clamped',\r\n              link: '/superlong',\r\n              shortcut: true,\r\n            },\r\n            {\r\n              icon: 'gift',\r\n              label: 'Super long label that will surely get clamped',\r\n              link: '/superlong',\r\n              shortcut: true,\r\n            },\r\n            {\r\n              icon: 'gift',\r\n              label: 'Super long label that will surely get clamped',\r\n              link: '/superlong',\r\n              shortcut: true,\r\n            },\r\n            {\r\n              icon: 'gift',\r\n              label: 'Super long label that will surely get clamped',\r\n              link: '/superlong',\r\n              shortcut: true,\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      icon: 'coffee',\r\n      label: 'Label 02',\r\n      link: '/link',\r\n      children: [\r\n        {\r\n          icon: 'robot',\r\n          label: 'Child 02',\r\n          link: '/child',\r\n          children: [\r\n            {\r\n              icon: 'gift',\r\n              label: 'Grandchild 01',\r\n              link: '/grandchild',\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nexport default ListMenu;\r\n","/usr/src/app/src/components/list-menu/list-menu-header.jsx",[],"/usr/src/app/src/components/list-menu/list-menu-item.jsx",[],{"ruleId":"80","severity":1,"message":"81","line":16,"column":16,"nodeType":null,"endLine":16,"endColumn":22,"fix":"82"},{"ruleId":"80","severity":1,"message":"83","line":18,"column":12,"nodeType":null,"endLine":18,"endColumn":18,"fix":"84"},{"ruleId":"80","severity":1,"message":"85","line":19,"column":10,"nodeType":null,"endLine":19,"endColumn":16,"fix":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":40,"column":15,"nodeType":"99","messageId":"100","endLine":40,"endColumn":26},{"ruleId":"97","severity":1,"message":"98","line":53,"column":15,"nodeType":"99","messageId":"100","endLine":53,"endColumn":26},{"ruleId":"97","severity":1,"message":"98","line":65,"column":7,"nodeType":"99","messageId":"100","endLine":65,"endColumn":20},{"ruleId":"97","severity":1,"message":"98","line":93,"column":7,"nodeType":"99","messageId":"100","endLine":93,"endColumn":18},{"ruleId":"101","severity":1,"message":"102","line":106,"column":1,"nodeType":"103","messageId":"104","endLine":106,"endColumn":84},{"ruleId":"101","severity":1,"message":"105","line":114,"column":1,"nodeType":"103","messageId":"104","endLine":114,"endColumn":94},{"ruleId":"97","severity":1,"message":"98","line":120,"column":11,"nodeType":"99","messageId":"100","endLine":120,"endColumn":22},{"ruleId":"97","severity":1,"message":"98","line":140,"column":9,"nodeType":"99","messageId":"100","endLine":140,"endColumn":22},{"ruleId":"106","severity":1,"message":"107","line":1,"column":8,"nodeType":"108","messageId":"109","endLine":1,"endColumn":17},{"ruleId":"106","severity":1,"message":"110","line":3,"column":10,"nodeType":"108","messageId":"109","endLine":3,"endColumn":17},{"ruleId":"97","severity":1,"message":"98","line":16,"column":3,"nodeType":"99","messageId":"100","endLine":16,"endColumn":14},{"ruleId":"106","severity":1,"message":"111","line":38,"column":10,"nodeType":"108","messageId":"109","endLine":38,"endColumn":15},{"ruleId":"106","severity":1,"message":"112","line":39,"column":9,"nodeType":"108","messageId":"109","endLine":39,"endColumn":21},{"ruleId":"106","severity":1,"message":"113","line":2,"column":32,"nodeType":"108","messageId":"109","endLine":2,"endColumn":41},{"ruleId":"106","severity":1,"message":"114","line":55,"column":9,"nodeType":"108","messageId":"109","endLine":55,"endColumn":20},"prettier/prettier","Replace `(svgs)` with `svgs`",{"range":"115","text":"116"},"Replace `((key)` with `(key`",{"range":"117","text":"118"},"Replace `(icon)` with `icon`",{"range":"119","text":"120"},"lines-around-directive",["121"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected","max-len","This line has a comment length of 83. Maximum allowed is 80.","Program","maxComment","This line has a comment length of 93. Maximum allowed is 80.","no-unused-vars","'propTypes' is defined but never used.","Identifier","unusedVar","'connect' is defined but never used.","'state' is assigned a value but never used.","'addShortcuts' is assigned a value but never used.","'useEffect' is defined but never used.","'collapseAll' is assigned a value but never used.",[563,569],"svgs",[613,619],"(key",[667,673],"icon","padding-line-between-statements"]